//
// breakpoints
//

@function breakpoint-next(
  $name,
  $breakpoints: $med-grid-breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  $n: index($breakpoint-names, $name);
  @if not $n {
    @error 'breakpoint `#{$name}` not found in `#{$breakpoints}`';
  }
  @return if(
    $n < length($breakpoint-names),
    nth($breakpoint-names, $n + 1),
    null
  );
}

@function breakpoint-min($name, $breakpoints: $med-grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function breakpoint-max($name, $breakpoints: $med-grid-breakpoints) {
  $max: map-get($breakpoints, $name);
  @return if($max and $max > 0, $max - 0.02, null);
}

@function breakpoint-infix($name, $breakpoints: $med-grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

//
// tipografia
//

@function line-height($font-size: $med-font-size-xs) {
  $line-height: ceil(strip-unit($font-size) * 1.3);

  @while ($line-height % 8) != 0 {
    $line-height: $line-height + 1;
  }

  @return #{$line-height}px;
}

@function letter-spacing(
  $font-size: $med-font-size-xs,
  $letter-spacing: $med-line-spacing-default
) {
  @return $font-size * $letter-spacing;
}

@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

//
// breakpoints
//

@mixin breakpoint-up($name, $breakpoints: $med-grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @error 'breakpoint `#{$name}` not found in `#{$breakpoints}`';
  }
}

@mixin breakpoint-down($name, $breakpoints: $med-grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @error 'breakpoint `#{$name}` not found in `#{$breakpoints}`';
  }
}

@mixin breakpoint-between($lower, $upper, $breakpoints: $med-grid-breakpoints) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @error 'breakpoint `#{$upper}` not found in `#{$breakpoints}`';
  } @else if $min == null {
    @error 'breakpoint `#{$lower}` not found in `#{$breakpoints}`';
  }
}

@mixin breakpoint-only($name, $breakpoints: $med-grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $next: breakpoint-next($name, $breakpoints);
  $max: breakpoint-max($next);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @error 'breakpoint `#{$next}` not found in `#{$breakpoints}`';
  } @else if $min == null {
    @error 'breakpoint `#{$name}` not found in `#{$breakpoints}`';
  }
}

//
// tipografia
//

@mixin font-face($font-name, $font-path, $weight, $style, $svg-id) {
  @font-face {
    font-family: quote($font-name);
    src: url($font-path + ".eot");
    src: url($font-path + ".eot?#iefix") format("embedded-opentype"),
      url($font-path + ".woff") format("woff"),
      url($font-path + ".svg##{$svg-id}") format("svg");
    font-weight: $weight;
    font-style: unquote($style);
  }
}

//
// utils
//

@mixin landscape($orientation: landscape) {
  @media screen and (orientation: $orientation) {
    @content;
  }
}
